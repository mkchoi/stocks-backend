<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<global-method-security pre-post-annotations="enabled" />
	
	<http pattern="/images/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/styles/**" security="none" />
	<http pattern="/json/**" security="none" />
	<http pattern="/webjars/**" security="none" />

	<http entry-point-ref="casEntryPoint" use-expressions="true">
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/timeout" access="permitAll" />
		<intercept-url pattern="/accessDenied" access="permitAll" />
		<intercept-url pattern="/loginFailed" access="permitAll" />
		<intercept-url pattern="/errorCode405" access="permitAll" />
		<intercept-url pattern="/errorCode500" access="permitAll" />
		<intercept-url pattern="/device/**" access="permitAll" />
		
		<!-- access control for others, begin -->
		<intercept-url pattern="/**"
			access="isAuthenticated()" />

		<!-- access control for others, end -->

		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<custom-filter ref="casFilter" position="CAS_FILTER" />

		<access-denied-handler error-page="/accessDenied" />

		<logout logout-success-url="/logout" />
		<logout delete-cookies="JSESSIONID" />
		
	</http>

	<authentication-manager alias="authManager">
		<authentication-provider ref="casAuthProvider" />
	</authentication-manager>

	<beans:bean id="singleLogoutFilter"
		class="org.jasig.cas.client.session.SingleSignOutFilter" />

	<beans:bean id="requestSingleLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter"
		p:filterProcessesUrl="/logout">
		<beans:constructor-arg
			value="${cas.server.protocol}://${cas.server.host}/cas/logout" />
		<beans:constructor-arg>
			<beans:bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</beans:constructor-arg>
	</beans:bean>

  
	<beans:bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service"
			value="${web.app.protocol}://${web.app.host}/${web.app.name}/j_spring_cas_security_check" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>
	
  
	<beans:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint"
		p:serviceProperties-ref="serviceProperties"
		p:loginUrl="${cas.server.protocol}://${cas.server.host}/cas/login" />

	<beans:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter"
		p:authenticationManager-ref="authManager" p:serviceProperties-ref="serviceProperties"  
		p:proxyGrantingTicketStorage-ref="pgtStorage"
		p:proxyReceptorUrl="/j_spring_cas_security_proxyreceptor">

		<beans:property name="authenticationDetailsSource">
			<beans:bean
				class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource" />
		</beans:property>
		<beans:property name="authenticationFailureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
				p:defaultFailureUrl="/loginFailed" />
		</beans:property>
	</beans:bean>

	<!-- NOTE: In a real application you should not use an in memory implementation. 
		You will also want to ensure to clean up expired tickets by calling ProxyGrantingTicketStorage.cleanup() -->
	<beans:bean id="pgtStorage"
		class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />
	
	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="enableAuthorities" value="true" />
		<beans:property name="enableGroups" value="false" />
	</beans:bean> 
	 
	<beans:bean id="casAuthProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider"
		p:serviceProperties-ref="serviceProperties" p:key="casAuthProviderKey">
		<beans:property name="authenticationUserDetailsService">
			<beans:bean
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<beans:constructor-arg ref="userDetailsService" />
			</beans:bean>
		</beans:property>
		<beans:property name="ticketValidator"> 
			<beans:bean
				class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator"
				p:acceptAnyProxy="true"
				p:proxyCallbackUrl="${cas.service.protocol}://${cas.service.host}/${web.app.name}/j_spring_cas_security_proxyreceptor"
				p:proxyGrantingTicketStorage-ref="pgtStorage">
				<beans:constructor-arg
					value="${cas.server.protocol}://${cas.server.host}/cas" />
			</beans:bean>
			<!-- 
			<beans:bean
				class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<beans:constructor-arg
					index="0"
					value="${cas.server.protocol}://${cas.server.host}/cas" />
			</beans:bean>
			-->
		</beans:property>
		
		<beans:property name="statelessTicketCache">
			<beans:bean
				class="org.springframework.security.cas.authentication.EhCacheBasedTicketCache">
				<beans:property name="cache">
					<beans:bean class="net.sf.ehcache.Cache" init-method="initialise"
						destroy-method="dispose">
						<beans:constructor-arg value="casTickets" />
						<beans:constructor-arg value="50" />
						<beans:constructor-arg value="true" />
						<beans:constructor-arg value="false" />
						<beans:constructor-arg value="3600" />
						<beans:constructor-arg value="900" />
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
		
	</beans:bean>

</beans:beans>
